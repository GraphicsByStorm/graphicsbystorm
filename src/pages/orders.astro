---
export const prerender = false;

import BaseLayout from "$layouts/BaseLayout.astro";
import Header from "$components/Header.astro";
import { prisma } from "$lib/db";

const { session, user } = Astro.locals;
if (!session) return Astro.redirect("/login");

const orders = await prisma.order.findMany({
  where: { userId: user!.id },
  orderBy: { createdAt: "desc" },
  include: { items: true }
});

const formatMoney = (cents: number, currency = "USD") =>
  new Intl.NumberFormat("en-US", { style: "currency", currency }).format(cents / 100);
const fmtDate = (d: Date) =>
  new Date(d).toLocaleDateString("en-US", { year: "numeric", month: "short", day: "numeric" });
---
<BaseLayout title="Orders — GraphicsByStorm">
  <Header />
  <section class="section section-brand-wash torn-top torn-angle-left" style="--torn-color: var(--color-surface-950);">
    <div class="section-inner space-y-6">
      <header class="flex items-center justify-between">
        <h1 class="heading-2 text-white">Your Orders</h1>
        <a href="/shop" class="btn-brand">Shop more</a>
      </header>

      {orders.length === 0 ? (
        <div class="card p-6">
          <p class="text-neutral-200">No orders yet.</p>
          <a class="link-underline mt-2 inline-block" href="/shop">Browse the shop →</a>
        </div>
      ) : (
        <div class="space-y-4">
          {orders.map((o) => (
            <article class="card p-5">
              <div class="flex flex-wrap items-center justify-between gap-3">
                <div class="text-sm text-neutral-300">
                  <div><span class="text-neutral-400">Order ID:</span> {o.id}</div>
                  <div><span class="text-neutral-400">Date:</span> {fmtDate(o.createdAt)}</div>
                </div>
                <div class="text-right">
                  <div class="text-lg font-semibold text-white">{formatMoney(o.amountCents, o.currency)}</div>
                  <div class="text-sm text-neutral-400">{o.processor.toUpperCase()} · {o.status}</div>
                </div>
              </div>

              {o.items.length > 0 && (
                <div class="mt-4 overflow-x-auto no-scrollbar">
                  <table class="w-full text-sm">
                    <thead class="text-left text-neutral-400">
                      <tr>
                        <th class="py-2 pr-3 font-normal">Item</th>
                        <th class="py-2 pr-3 font-normal">Qty</th>
                        <th class="py-2 pr-3 font-normal">Price</th>
                        <th class="py-2 pr-0 font-normal text-right">Subtotal</th>
                      </tr>
                    </thead>
                    <tbody class="divide-y divide-white/10">
                      {o.items.map((it) => (
                        <tr>
                          <td class="py-2 pr-3 text-neutral-200">{it.title}</td>
                          <td class="py-2 pr-3 text-neutral-200">{it.qty}</td>
                          <td class="py-2 pr-3 text-neutral-200">{formatMoney(it.priceCents, o.currency)}</td>
                          <td class="py-2 pr-0 text-right text-neutral-200">
                            {formatMoney(it.priceCents * it.qty, o.currency)}
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              )}
            </article>
          ))}
        </div>
      )}
    </div>
  </section>
</BaseLayout>
