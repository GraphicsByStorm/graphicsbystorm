---
import BaseLayout from "$layouts/BaseLayout.astro";
import { WORKS } from "$lib/data/work";
import { WORK_META, type WorkMeta } from "$lib/data/workMeta";
import CaseStudyHero from "$svelte/components/CaseStudyHero.svelte";

/** Build-time prerender only (no SSR) */
export const prerender = true;

/** Generate static paths for all work items */
export async function getStaticPaths() {
  return WORKS.map((w) => ({ params: { slug: w.slug } }));
}

/** Resolve item from slug and merge with meta */
const { slug } = Astro.params;
const base = WORKS.find((w) => w.slug === slug);
if (!base) throw new Error(`Case study not found: ${slug}`);

const meta: WorkMeta = WORK_META[slug!] ?? {};
const item = { ...base, ...meta };

const images: string[] = Array.isArray(item.images) ? item.images : [];
const cover = item.cover || images[0] || "";
const otherImages = images.filter((src) => src !== cover);

/** Left rail offset used by hero filmstrip */
const leftRail = "96px";
---

<BaseLayout title={`${item.title} • Case Study`} description={item.summary}>
  <!-- HERO (same filmstrip styling as homepage hero) -->
  <CaseStudyHero
    client:visible
    images={images}
    cover={cover}
    title={item.title}
    summary={item.blurb ?? item.summary ?? ""}
    tags={item.tags ?? []}
    year={item.year}
    date={(item as any).date}
    coverPosition={item.coverPosition ?? "cover"}
  />

  <!-- Article body -->
  <article class="mx-auto max-w-6xl px-4 py-10 text-neutral-100">
    {item.summary && <p class="lead">{item.summary}</p>}

    {
      item.highlights?.length ? (
        <ul class="mt-4 space-y-1 list-disc pl-5 text-neutral-200/95">
          {item.highlights.map((h) => (
            <li>{h}</li>
          ))}
        </ul>
      ) : null
    }

    <!-- Long-form details (optional copy blocks) -->
    {
      (item as any).details && (
        <section class="mt-8 grid gap-6">
          {(item as any).details.tools && (
            <div class="cs-block">
              <h3 class="cs-h">Tools</h3>
              <p class="cs-p">{(item as any).details.tools}</p>
            </div>
          )}
          {(item as any).details.design && (
            <div class="cs-block">
              <h3 class="cs-h">Design</h3>
              <p class="cs-p">{(item as any).details.design}</p>
            </div>
          )}
          {(item as any).details.creativity && (
            <div class="cs-block">
              <h3 class="cs-h">Creativity</h3>
              <p class="cs-p">{(item as any).details.creativity}</p>
            </div>
          )}
          {(item as any).details.critique && (
            <div class="cs-block">
              <h3 class="cs-h">Critique</h3>
              <p class="cs-p">{(item as any).details.critique}</p>
            </div>
          )}
          {(item as any).details.directions && (
            <div class="cs-block">
              <h3 class="cs-h">Directions</h3>
              <p class="cs-p">{(item as any).details.directions}</p>
            </div>
          )}
          {(item as any).details.craftsmanship && (
            <div class="cs-block">
              <h3 class="cs-h">Craft</h3>
              <p class="cs-p">{(item as any).details.craftsmanship}</p>
            </div>
          )}
        </section>
      )
    }
  </article>

  <!-- Edge-to-edge image bands (keep aspect ratio, reasonable size) -->
  {
    otherImages.length
      ? otherImages.map((src) => (
          <section class="bleed">
            <figure class="band edge">
              <img src={src} alt="" loading="lazy" class="cs-img" />
            </figure>
          </section>
        ))
      : null
  }

  <!-- Back link (optional) -->
  <div class="mx-auto max-w-6xl px-4 py-10">
    <a href="/#work" class="back-link">← Back to work</a>
  </div>
</BaseLayout>

<style>
  /* Article text */
  .lead {
    color: #e5e7eb;
    max-width: 70ch;
    line-height: 1.6;
  }
  .cs-block {
    border: 1px solid rgba(255, 255, 255, 0.08);
    background: rgba(255, 255, 255, 0.04);
    padding: 0.9rem 1rem;
  }
  .cs-h {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 900;
    letter-spacing: 0.2px;
    color: #fff;
    font-size: 0.95rem;
    margin: 0 0 0.35rem;
  }
  .cs-h::before {
    content: "";
    width: 6px;
    height: 12px;
    background: var(--color-brand-500, #e2a028);
  }
  .cs-p {
    color: #d9dde2;
    line-height: 1.65;
  }

  /* Full-bleed helper (edge-to-edge containers) */
  .bleed {
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    width: 100vw;
  }

  /* Edge image band: center content, keep ratio, constrain size */
  .band.edge {
    position: relative;
    isolation: isolate;
    width: 100%;
    background: #0c0c0c;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 12px 0; /* small breathing room without cramping */
    overflow: hidden;
  }
  .cs-img {
    display: block;
    height: auto; /* keep aspect ratio */
    max-height: min(85vh, 1200px);
    width: auto; /* prevent over-stretched portrait shots */
    max-width: min(100vw, 1920px); /* cap super-wide images */
    object-fit: contain; /* no cropping; show full artwork */
  }

  /* Back link styling */
  .back-link {
    color: var(--color-brand-500, #e2a028);
    text-underline-offset: 4px;
  }

  @media (max-width: 640px) {
    .cs-img {
      max-height: 70vh;
      max-width: 100vw;
    }
  }
</style>
