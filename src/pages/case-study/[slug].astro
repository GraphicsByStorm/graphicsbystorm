---
import BaseLayout from "../../layouts/BaseLayout.astro";
import CaseHero from "$svelte/components/CaseHero.svelte";
import { WORKS } from "$lib/data/work";
import { WORK_META, type CaseStudyDetails } from "$lib/data/workMeta";

export const prerender = true;

export async function getStaticPaths() {
  return WORKS.map((w) => ({ params: { slug: w.slug } }));
}

const { slug } = Astro.params;
const base = WORKS.find((w) => w.slug === slug);
if (!base) throw new Error(`Case study not found: ${slug}`);

type MetaShape = Partial<typeof base> & {
  details?: CaseStudyDetails;
  date?: string;
  year?: number;
  coverPosition?: "top" | "contain" | "cover";
  typography?: { family: string; weights?: string[]; sources?: string[]; notes?: string };
  palette?: { name: string; hex: string; rgb?: string; hsl?: string }[];
  process?: { label: string; date?: string; note?: string }[];
};
const meta = (WORK_META as Record<string, MetaShape>)[slug!] ?? {};
const item = { ...base, ...meta };

const {
  title,
  blurb = "",
  cover,
  images,
  tags = [],
  tools = [],
  highlights = [],
  summary = "",
  slug: itemSlug,
  date,
  year,
  coverPosition = "cover",
  details,
  typography,
  palette = [],
  process = []
} = item;

// Prev/Next
const idx = WORKS.findIndex((w) => w.slug === itemSlug);
const prev = WORKS[(idx - 1 + WORKS.length) % WORKS.length];
const next = WORKS[(idx + 1) % WORKS.length];
---

<BaseLayout title={`${title} • Case Study`} description={summary}>
  <!-- HERO (click → immersive lightbox) -->
  <section class="px-4 sm:px-6 lg:px-8 pt-8">
    <CaseHero
      client:load
      images={images}
      cover={cover}
      coverPosition={coverPosition}
      title={title}
      blurb={blurb}
      slug={itemSlug}
      tags={tags}
      date={date}
      year={year}
    />
  </section>

  <!-- OVERVIEW & HIGHLIGHTS (above the fold) -->
  {(summary || highlights.length) && (
    <section class="px-4 sm:px-6 lg:px-8 mt-8">
      <div class="mx-auto max-w-6xl grid gap-8 lg:grid-cols-[1.15fr_.85fr]">
        <article class="space-y-5">
          {summary && (
            <section class="rounded-2xl border border-white/10 bg-white/5 p-5">
              <h2 class="text-base font-bold text-white/95">Overview</h2>
              <p class="mt-2 text-neutral-200/95 leading-relaxed">{summary}</p>
            </section>
          )}

          {highlights.length > 0 && (
            <section class="rounded-2xl border border-white/10 bg-white/5 p-5">
              <h2 class="text-base font-bold text-white/95">Highlights</h2>
              <ul class="mt-2 space-y-1 text-neutral-200/95">
                {highlights.map((h) => (
                  <li class="flex gap-2"><span aria-hidden="true">•</span><span>{h}</span></li>
                ))}
              </ul>
            </section>
          )}
        </article>

        <!-- Meta rail (compact) -->
        <aside class="h-fit rounded-2xl border border-white/10 bg-white/5 p-4 lg:sticky lg:top-6">
          {cover && <img src={cover} alt="" class="w-full rounded-xl border border-white/10 object-cover" loading="lazy" decoding="async" />}
          {tools.length > 0 && (
            <div class="mt-4">
              <h3 class="font-semibold text-white/95 mb-2">Tools</h3>
              <div class="flex flex-wrap gap-2">
                {tools.map((t) => <span class="rounded-full border border-white/10 bg-white/5 px-2 py-0.5 text-[12px]">{t}</span>)}
              </div>
            </div>
          )}
          {tags.length > 0 && (
            <div class="mt-3">
              <h3 class="font-semibold text-white/95 mb-2">Categories</h3>
              <div class="flex flex-wrap gap-1.5">
                {tags.map((t) => <span class="rounded-full border border-white/10 bg-white/10 px-2 py-0.5 text-[11px]">{t}</span>)}
              </div>
            </div>
          )}
          {(year || date) && (
            <div class="mt-3 text-[12px] text-white/70 flex items-center gap-2">
              {year && <span>{year}</span>}
              {date && <span aria-hidden="true">•</span>}
              {date && <time datetime={date}>{date}</time>}
            </div>
          )}
        </aside>
      </div>
    </section>
  )}

  <!-- DESIGN SYSTEM: Typography, Palette, Process (no image grid) -->
  {(typography || palette.length || process.length) && (
    <section class="px-4 sm:px-6 lg:px-8 mt-10">
      <div class="mx-auto max-w-6xl grid gap-6 lg:grid-cols-2">
        {typography && (
          <section class="rounded-2xl border border-white/10 bg-white/5 p-5">
            <h2 class="text-base font-bold text-white/95">Typography</h2>
            <div class="mt-2 text-neutral-200/95 leading-relaxed">
              <div class="flex items-center gap-2 text-[14px]">
                <span class="font-semibold text-white/95">Font Family:</span>
                <span>{typography.family}</span>
              </div>
              {typography.weights?.length && (
                <div class="mt-1 text-[13px]"><span class="text-white/80">Weights:</span> {typography.weights.join(", ")}</div>
              )}
              {typography.sources?.length && (
                <div class="mt-1 text-[13px]"><span class="text-white/80">Sources:</span> {typography.sources.join(", ")}</div>
              )}
              {typography.notes && <p class="mt-2 text-[13px] text-neutral-200/90">{typography.notes}</p>}
            </div>
          </section>
        )}

        {palette.length > 0 && (
          <section class="rounded-2xl border border-white/10 bg-white/5 p-5">
            <h2 class="text-base font-bold text-white/95">Color Palette</h2>
            <div class="mt-3 grid grid-cols-2 sm:grid-cols-3 gap-3">
              {palette.map((c) => (
                <div class="rounded-xl border border-white/10 overflow-hidden">
                  <div class="h-16" style={`background:${c.hex}`}></div>
                  <div class="p-3 text-[12px] leading-relaxed">
                    <div class="font-semibold text-white/95">{c.name}</div>
                    <div class="text-white/85">HEX: {c.hex}</div>
                    {c.rgb && <div class="text-white/75">RGB(A): {c.rgb}</div>}
                    {c.hsl && <div class="text-white/75">HSL: {c.hsl}</div>}
                  </div>
                </div>
              ))}
            </div>
          </section>
        )}

        {process.length > 0 && (
          <section class="lg:col-span-2 rounded-2xl border border-white/10 bg-white/5 p-5">
            <h2 class="text-base font-bold text-white/95">Design Process</h2>
            <ol class="mt-4 relative border-l border-white/10 pl-4">
              {process.map((step) => (
                <li class="mb-4 last:mb-0">
                  <div class="absolute -left-[7px] mt-[2px] size-3 rounded-full" style="background:var(--color-brand-500,#E2A028)"></div>
                  <div class="text-[14px] font-semibold text-white/95">{step.label}</div>
                  <div class="text-[12px] text-white/70">{step.date}</div>
                  {step.note && <p class="mt-1 text-[13px] text-neutral-200/90">{step.note}</p>}
                </li>
              ))}
            </ol>
          </section>
        )}
      </div>
    </section>
  )}

  <!-- PREV / NEXT -->
  <nav class="px-4 sm:px-6 lg:px-8 mt-12 mb-14">
    <div class="mx-auto max-w-6xl grid gap-4 sm:grid-cols-2">
      <a href={`/case-study/${prev.slug}`} class="group flex items-center gap-3 rounded-xl border border-white/10 bg-white/[.05] p-3 hover:bg-white/[.08] transition">
        <img src={prev.cover} alt="" class="size-14 rounded-lg border border-white/10 object-cover" loading="lazy" />
        <div>
          <div class="text-[11px] text-white/70">Previous</div>
          <div class="font-semibold text-white group-hover:underline underline-offset-4">{prev.title}</div>
        </div>
      </a>

      <a href={`/case-study/${next.slug}`} class="group flex items-center gap-3 justify-end rounded-xl border border-white/10 bg-white/[.05] p-3 hover:bg-white/[.08] transition">
        <div class="text-right">
          <div class="text-[11px] text-white/70">Next</div>
          <div class="font-semibold text-white group-hover:underline underline-offset-4">{next.title}</div>
        </div>
        <img src={next.cover} alt="" class="size-14 rounded-lg border border-white/10 object-cover" loading="lazy" />
      </a>
    </div>
  </nav>
</BaseLayout>
