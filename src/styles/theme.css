@import "tailwindcss";

/* Prefer dark UI everywhere */
:root { color-scheme: dark; }

/* ───────────────── TOKENS (Tailwind v4 @theme) ───────────────── */
@theme {
  /* Typography */
  --font-sans: ui-sans-serif, system-ui, Inter, "Segoe UI", Roboto, Arial,
               "Apple Color Emoji","Segoe UI Emoji";
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
               "Liberation Mono","Courier New", monospace;

  /* Brand palette (cool/violet) */
  --color-brand-50:  oklch(0.980 0.030 76.59);
  --color-brand-100: oklch(0.950 0.045 76.59);
  --color-brand-200: oklch(0.900 0.065 76.59);
  --color-brand-300: oklch(0.840 0.095 76.59);
  --color-brand-400: oklch(0.790 0.125 76.59);
  --color-brand-500: oklch(0.751 0.146 76.59);
  --color-brand-600: oklch(0.680 0.140 76.59);
  --color-brand-700: oklch(0.600 0.125 76.59);
  --color-brand-800: oklch(0.520 0.105 76.59);
  --color-brand-900: oklch(0.450 0.090 76.59);

  /* Surfaces */
  --color-surface-950: #0b0c0f; /* page bg */
  --color-surface-900: #0f1115; /* cards */
  --color-surface-850: #141720; /* hovers */

  /* Layout */
  --container: 72rem;

  /* Radii / shadow */
  --radius-md: 10px;
  --shadow-card: 0 1px 0 hsl(0 0% 100% / 0.04), 0 12px 30px hsl(0 0% 0% / 0.35);
}

/* High-resolution, fine-grain noise + torn controls */
:root {
  /* Smaller features → finer grain */
  --noise-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 64 64'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.6' numOctaves='5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='64' height='64' fill='black' filter='url(%23n)'/%3E%3C/svg%3E");
  --noise-size: 160px;        /* lower = finer (try 140–200) */

  /* Torn paper */
  --torn-height: 44px;
  --torn-size: 1200px;        /* width of repeating torn tile */
  --torn-rotate: 0deg;        /* default angle; override per section if desired */
  --torn-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1200' height='44' viewBox='0 0 1200 44'%3E%3Cpath d='M0 14 C60 22 120 6 180 12 C240 18 300 8 360 14 C420 20 480 10 540 16 C600 22 660 12 720 18 C780 24 840 10 900 16 C960 22 1020 12 1080 18 C1140 24 1170 18 1200 16 L1200 44 L0 44 Z' fill='black'/%3E%3C/svg%3E");
}

/* ───────────────── BASE LAYER ───────────────── */
@layer base {
  html, body { @apply bg-neutral-950 text-neutral-200 font-sans; }
  ::selection { @apply bg-brand-500/30 text-white; }
}

/* ───────────────── HEADER UTILITIES ───────────────── */
@utility header-surface {
  @apply sticky top-0 z-50 border-b border-white/10;
  background-color: rgb(10 11 14 / 0.78); /* neutral-950/78 */
  -webkit-backdrop-filter: blur(8px) saturate(115%);
          backdrop-filter: blur(8px) saturate(115%);
}
@utility header-bar {
  display: grid;
  grid-template-columns: 1fr auto 1fr;  /* left | center | right */
  align-items: center;
  min-height: clamp(56px, 6.5svh, 72px);
}
@utility header-inner {
  max-inline-size: var(--container);
  margin-inline: auto;
  padding-inline: clamp(1rem, 4vw, 2rem);
  width: 100%;
}
@utility nav-link {
  @apply text-sm text-neutral-300 hover:text-white transition-colors px-2 py-2 rounded-md;
}
@utility nav-rail {
  @apply overflow-x-auto no-scrollbar;
  max-width: 60vw;
}

/* ───────────────── LAYOUT UTILITIES ───────────────── */
@utility container-shell {
  max-inline-size: var(--container);
  margin-inline: auto;
  padding-inline: clamp(1rem, 4vw, 2rem);
}

/* Full-bleed sections with inner container (no hard dividers) */
@utility section {
  position: relative;
  width: 100%;
  padding-block: clamp(2.75rem, 6vw, 5.25rem);
}
@utility section-inner {
  max-inline-size: var(--container);
  margin-inline: auto;
  padding-inline: clamp(1rem, 4vw, 2rem);
}

/* ───────────────── CARDS & HOVERS ───────────────── */
@utility card {
  background-color: var(--color-surface-900);
  border: 1px solid rgb(255 255 255 / 0.10);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-card);
  backdrop-filter: saturate(115%) blur(6px);
}
@layer utilities {
  .hover-lift { transition: transform 150ms ease, opacity 150ms ease; }
  .hover-lift:hover { transform: translateY(-1px); }
  .hover-lift:active { transform: translateY(0); }
}

/* ───────────────── BUTTONS ───────────────── */
@utility btn {
  @apply inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2
         text-sm font-medium transition-colors;
}
/* Brand-first button: fades to page bg on hover */
@utility btn-brand {
  @apply inline-flex items-center justify-center gap-2 rounded-lg px-4 py-2 text-sm font-medium;
  background-color: var(--color-brand-500);
  color: black;
  border: 1px solid transparent;
  transition: background-color 220ms ease, color 220ms ease, border-color 220ms ease, transform 120ms ease;
}
@layer utilities {
  .btn-brand:hover {
    background-color: var(--color-surface-950);
    color: white;
    border-color: color-mix(in oklab, var(--color-brand-500) 35%, white 0%);
  }
  .btn-brand:active { transform: translateY(0.5px); }
}
/* Keep ghost/muted for secondary actions */
@utility btn-ghost { @apply btn bg-transparent text-neutral-200 border border-white/12 hover:border-white/25; }
@utility btn-muted { @apply btn bg-white text-black hover:bg-neutral-200; }
/* Compatibility alias */
@utility btn-primary { @apply btn-brand; }

/* ───────────────── FORMS ───────────────── */
@utility input   { @apply h-11 w-full rounded-lg bg-neutral-900/70 border border-white/10 px-3 text-sm placeholder:text-neutral-500; }
@utility textarea{ @apply w-full min-h-32 rounded-lg bg-neutral-900/70 border border-white/10 px-3 py-2 text-sm placeholder:text-neutral-500; }
@utility select  { @apply h-11 w-full rounded-lg bg-neutral-900/70 border border-white/10 px-3 text-sm; }

/* ───────────────── CHIPS / FILTERS ───────────────── */
@utility chip        { @apply inline-flex items-center gap-2 rounded-full border border-white/12 px-3 py-1.5 text-xs text-neutral-200 bg-neutral-900/60; }
@utility chip-active { @apply bg-brand-500/18 border-brand-500/40 text-white; }

/* ───────────────── TYPE / LINKS ───────────────── */
@utility heading-hero { @apply text-5xl md:text-7xl font-extrabold tracking-tight; }
@utility heading-2    { @apply text-2xl md:text-3xl font-semibold; }
@utility link-underline { @apply underline underline-offset-4 decoration-white/30 hover:decoration-white; }

/* ───────────────── SCROLLBAR HIDE ───────────────── */
@utility no-scrollbar { scrollbar-width: none; -ms-overflow-style: none; }
@layer utilities { .no-scrollbar::-webkit-scrollbar { display: none; } }

/* ───────────────── BACKDROPS & TEXTURES ───────────────── */
/* Ultra-light grid for backgrounds (page or section) */
@utility bg-grid {
  background-image:
    linear-gradient(to right, rgb(255 255 255 / 0.03) 1px, transparent 1px),
    linear-gradient(to bottom, rgb(255 255 255 / 0.03) 1px, transparent 1px);
  background-size: 32px 32px;
  background-position: center;
}

/* Fine, neutral noise overlay (monochrome via mask)
   NOTE: this class does NOT set position to avoid interfering with `sticky`.
   Add `relative` on the host when needed (sections already are). */
@layer utilities {
  .noise-overlay::before {
    content: ""; position: absolute; inset: 0; pointer-events: none; border-radius: inherit;
    background-color: rgb(255 255 255 / 0.06);
    -webkit-mask-image: var(--noise-mask);
            mask-image: var(--noise-mask);
    -webkit-mask-size: var(--noise-size);
            mask-size: var(--noise-size);
  }
}

/* Full-bleed section textures */
@layer utilities {
  .texture-noise::before,
  .texture-grid::before {
    content: "";
    position: absolute; inset: 0;
    pointer-events: none;
    border-radius: inherit;
  }
  .texture-noise::before {
    background-color: rgb(255 255 255 / 0.05);
    -webkit-mask-image: var(--noise-mask);
            mask-image: var(--noise-mask);
    -webkit-mask-size: var(--noise-size);
            mask-size: var(--noise-size);
  }
  .texture-grid::before {
    background-image:
      linear-gradient(to right, rgb(255 255 255 / 0.03) 1px, transparent 1px),
      linear-gradient(to bottom, rgb(255 255 255 / 0.03) 1px, transparent 1px);
    background-size: 32px 32px;
    background-position: center;
  }
}

/* ───────────────── BRAND-TINTED SECTIONS ───────────────── */
@utility section-brand {
  background-image:
    linear-gradient(135deg, var(--color-brand-900) 0%, var(--color-brand-800) 60%, var(--color-brand-900) 100%);
}
@utility section-brand-soft {
  background-image:
    linear-gradient(135deg,
      color-mix(in oklab, var(--color-brand-800) 50%, black) 0%,
      var(--color-brand-900) 100%);
}
@utility section-brand-wash { position: relative; }
@layer utilities {
  .section-brand-wash::before {
    content: "";
    position: absolute; inset: 0; pointer-events: none; border-radius: inherit;
    background: linear-gradient(135deg,
      color-mix(in oklab, var(--color-brand-500) 14%, transparent) 0%,
      transparent 60%);
  }
}

/* ───────────────── TORN PAPER SEPARATORS ───────────────── */
/* ───────────────── TORN PAPER SEPARATORS ───────────────── */
/* Controls (global) */
:root {
  --torn-height: 44px;
  --torn-size: 1200px;        /* width of repeating torn tile */
  --torn-rotate: 0deg;
  --torn-color: #0b0c0f;      /* fallback fill when using color-based tears */
}

/* Base: image-aligned mode (uses optional image + dim + fade) */
@layer utilities {
  .torn-bottom { position: relative; z-index: 0; }
  .torn-bottom::after {
    content: "";
    position: absolute;
    inset-inline: -2px;
    bottom: calc(-1px - var(--torn-overlap, 0px));
    height: calc(var(--torn-height) + var(--torn-overlap, 0px));

    /* default: dim + fade + background image/color (if provided) */
    background-image:
      var(--torn-fade, linear-gradient(to bottom, rgba(0,0,0,0) 35%, rgba(0,0,0,.88) 100%)),
      var(--torn-dim,  linear-gradient(rgba(0,0,0,.65), rgba(0,0,0,.65))),
      var(--torn-background, var(--torn-color));
    background-size:
      100% 100%,
      100% 100%,
      var(--torn-bg-size, auto);
    background-position:
      var(--torn-bg-position, left bottom),
      var(--torn-bg-position, left bottom),
      var(--torn-bg-position, left bottom);
    background-repeat: no-repeat, no-repeat, no-repeat;

    -webkit-mask-image: var(--torn-mask), var(--noise-mask);
            mask-image: var(--torn-mask), var(--noise-mask);
    -webkit-mask-position: left bottom, left bottom;
            mask-position: left bottom, left bottom;
    -webkit-mask-repeat: repeat-x, repeat;
            mask-repeat: repeat-x, repeat;
    -webkit-mask-size: var(--torn-size) var(--torn-height), var(--noise-size) var(--noise-size);
            mask-size: var(--torn-size) var(--torn-height), var(--noise-size) var(--noise-size);

    opacity: .95;
    transform: rotate(var(--torn-rotate));
    pointer-events: none;
    z-index: 2;
  }

  .torn-top { position: relative; z-index: 1; }
  .torn-top::before {
    content: "";
    position: absolute;
    inset-inline: -2px;
    top: calc(-1px - var(--torn-overlap, 0px));
    height: calc(var(--torn-height) + var(--torn-overlap, 0px));

    background-image:
      var(--torn-fade, linear-gradient(to top, rgba(0,0,0,0) 35%, rgba(0,0,0,.88) 100%)),
      var(--torn-dim,  linear-gradient(rgba(0,0,0,.65), rgba(0,0,0,.65))),
      var(--torn-background, var(--torn-color));
    background-size:
      100% 100%,
      100% 100%,
      var(--torn-bg-size, auto);
    background-position:
      var(--torn-bg-position, left top),
      var(--torn-bg-position, left top),
      var(--torn-bg-position, left top);
    background-repeat: no-repeat, no-repeat, no-repeat;

    -webkit-mask-image: var(--torn-mask), var(--noise-mask);
            mask-image: var(--torn-mask), var(--noise-mask);
    -webkit-mask-position: left top, left top;
            mask-position: left top, left top;
    -webkit-mask-repeat: repeat-x, repeat;
            mask-repeat: repeat-x, repeat;
    -webkit-mask-size: var(--torn-size) var(--torn-height), var(--noise-size) var(--noise-size);
            mask-size: var(--torn-size) var(--torn-height), var(--noise-size) var(--noise-size);

    opacity: .95;
    transform: rotate(calc(var(--torn-rotate) * -1));
    pointer-events: none;
    z-index: 2;
  }

  /* Angle helpers */
  .torn-angle-left  { --torn-rotate: -1.2deg; }
  .torn-angle-right { --torn-rotate:  1.2deg; }

  /* Overlay mode: **no image** inside the flap.
     The flap is just a gradient overlay shaped by the torn mask.
     This prevents the “tiny image in the flap” issue. */
  .torn-overlay.torn-bottom::after {
    background-image: var(--torn-fade, linear-gradient(to bottom, rgba(0,0,0,0) 30%, rgba(0,0,0,.92) 100%));
    background-size: 100% 100%;
    background-position: 0 0;
  }
  .torn-overlay.torn-top::before {
    background-image: var(--torn-fade, linear-gradient(to top, rgba(0,0,0,0) 30%, rgba(0,0,0,.92) 100%));
    background-size: 100% 100%;
    background-position: 0 0;
  }
}

/* --- Lightbox helpers --- */
html.no-scroll, body.no-scroll { overflow: hidden !important; }

/* --- Responsive media frames with aspect-ratio reservation --- */
.media-frame {
  position: relative;
  width: 100%;
  /* fallback ratio; will be overridden via inline --ar if known */
  aspect-ratio: var(--ar, 16/9);
  background: var(--surface-2, #0b0b0b);
  border-radius: var(--radius-xl, 16px);
  overflow: hidden;
  display: block;
}
.media-frame > img {
  width: 100%;
  height: 100%;
  object-fit: contain; /* fit the containing image within reason */
  display: block;
  background: transparent;
}