generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") // e.g. file:./dev.db
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  name         String?
  phone        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  addresses Address[]
  sessions  Session[]
  orders    Order[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokenHash String   @unique // sha256(sid)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}

model Address {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  line1     String
  line2     String?
  city      String
  state     String?
  postal    String
  country   String
  isDefault Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, isDefault]) // one default address per user
}

model Order {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  amountCents Int
  currency    String      @default("USD")
  processor   String // paypal | cashapp | crypto
  status      String      @default("paid")
  createdAt   DateTime    @default(now())
  items       OrderItem[]
}

model OrderItem {
  id         String @id @default(cuid())
  orderId    String
  order      Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  title      String
  qty        Int
  priceCents Int
}
